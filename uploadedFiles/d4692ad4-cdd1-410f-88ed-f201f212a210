1¡¢
#include <math.h>  
float InvSqrt(float x)  
{  
 float xhalf = 0.5f*x;  
 int i = *(int*)&x; // get bits for floating VALUE  
 i = 0x5f375a86- (i>>1); // gives initial guess y0  
 x = *(float*)&i; // convert bits BACK to float  
 x = x*(1.5f-xhalf*x*x); // Newton step, repeating increases accuracy  
 return x;  
}  
  
int main()  
{  
  printf("%lf",1/InvSqrt(3));  
  
   return 0;  
}  

2¡¢
#include <math.h>  
float SquareRootFloat(float number) {  
    long i;  
    float x, y;  
    const float f = 1.5F;  
  
    x = number * 0.5F;  
    y  = number;  
    i  = * ( long * ) &y;  
    i  = 0x5f3759df - ( i >> 1 );  
    y  = * ( float * ) &i;  
    y  = y * ( f - ( x * y * y ) );  
    y  = y * ( f - ( x * y * y ) );  
    return number * y;  
}  
  
int main()  
{  
  printf("%f",SquareRootFloat(3));  
  
   return 0;  
}  